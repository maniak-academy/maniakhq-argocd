global:
  name: consul
  image: "hashicorp/consul-enterprise:1.18.1-ent"
  enableConsulNamespaces: true
  enterpriseLicense:
    secretName: 'consul-ent-license'
    secretKey: 'key'
    enableLicenseAutoload: true
  datacenter: mk1
  peering:
    enabled: true
  adminPartitions:
    enabled: true
    name: default

  # TLS configures whether Consul components use TLS.
  tls:
    enabled: true
    enableAutoEncypt: true
    httpsOnly: false  # Metrics are exposed on 8500 only (http).  Anonymous policy requires Agent "read" if ACL enabled.
    # verify: false
    # caCert:
    #   secretName: consul-ca-cert
    #   secretKey: tls.crt
  acls:
    manageSystemACLs: true
  gossipEncryption:
    secretName: consul-gossip-encryption-key
    secretKey: key
  # metrics:
  #   enabled: true
  #   enableGatewayMetrics: true
  #   enableAgentMetrics: true
  #   agentMetricsRetentionTime: "59m"
server:
  replicas: 1
  bootstrapExpect: 1
  exposeService:
    # When enabled, deploys a Kubernetes Service to reach the Consul servers.
    # @type: boolean
    enabled: true
    type: LoadBalancer
    # annotations: |
    #   service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"
 
  extraConfig: |
    {
      "log_level": "TRACE"
    }
  resources:
    requests:
      memory: "1461Mi" # 75% of 2GB Mem
      cpu: "500m"
    limits:
      memory: "1461Mi"
      cpu: "1000m"
dns:
  enabled: true
  enableRedirection: true

# syncCatalog:
#   enabled: true 
#   toConsul: true
#   toK8S: false
#   k8sAllowNamespaces: ["foo","appdemo","appdemo2","echo"]
#   k8sDenyNamespaces: ["consul", "kube-system","longhorn-system", "argocd"]
#   addK8SNamespaceSuffix: false
#   consulNamespaces:
#     mirroringK8S: true

syncCatalog:
  enabled: true
  toConsul: true
  toK8S: true
  k8sAllowNamespaces: ["*"]
  k8sDenyNamespaces: ["consul", "kube-system"]
  addK8SNamespaceSuffix: false
  consulNamespaces:
    mirroringK8S: true

connectInject:
  enabled: true
  k8sAllowNamespaces: ['hashicups','echo','default']
  k8sDenyNamespaces: []
  apiGateway:
    manageExternalCRDs: true
    managedGatewayClass:
      serviceType: LoadBalancer
     # useHostPorts: true
      # copyAnnotations:
      #   service:
      #     annotations: |
      #       - service.beta.kubernetes.io/aws-load-balancer-scheme
      #       - service.beta.kubernetes.io/aws-load-balancer-type
  transparentProxy:
    defaultEnabled: true
  consulNamespaces:
    mirroringK8S: true
    consulDestinationNamespace: "default"
  cni:
    enabled: true
  metrics:
    defaultEnabled: true # by default, this inherits from the value global.metrics.enabled
    defaultEnableMerging: true
    # defaultPrometheusScrapePort: 20200
    # defaultPrometheusScrapePath: "/metrics"
    # defaultMergedMetricsPort: 20100
  # sidecarProxy:
  #   # https://blog.envoyproxy.io/envoy-threading-model-a8d44b922310
  #   concurrency: 2
  #   resources:
  #     requests:
  #       memory: "100Mi" 
  #       cpu: "100m"
  #     limits:
  #       memory: "100Mi"
  #       cpu: "100m"
  initContainer:
  # The defaults are optimized for developer instances of Kubernetes, however they should 
  # be tweaked with the recommended defaults as shown below to speed up service registration times. 
    resources:
      requests:
        # Recommended production default: 150Mi
        memory: "25Mi"
        # Recommended production default: 250m
        cpu: "50m"
      limits:
        # Recommended production default: 150Mi
        memory: "150Mi"
        # Recommended production default: 500m
        cpu: "250m"
meshGateway:
  enabled: enabled
  replicas: 1
  log_level: "debug"
  service:
    enabled: true
    type: LoadBalancer
    #nodePort: 31915
    # annotations: |
    #   service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"

ui:
  enabled: true
  service:
    type: LoadBalancer
  metrics:
    enabled: true # by default, this inherits from the value global.metrics.enabled
    provider: "prometheus"
    baseURL: http://prometheus-server
    
prometheus:
  enabled: true
